# Maintainer: Luke Labrie-Cleary <luke.cleary@copenhagenatomics.com>
pkgname=python-cad_to_openmc
pkgver=0.2.2
pkgrel=1
pkgdesc="code to target the conversion from a step-file to a h5m-geometry 
		 for neutronics"
arch=('x86_64')
url="https://github.com/openmsr/CAD_to_OpenMC"
license=('MIT')

depends=(
	moab-5.3.1
	gmsh
	pypy-pyparsing
	python-cadquery
	python-numpy
	ocp
	python-meshio
	python-trimesh
	python-networkx
	cython
	python-pytest
	mmg
	)
makedepends=(
	git
	python
	cmake
	python-build
	python-installer
	python-wheel
)

provides=("${pkgname%-pkgver}")

source=('https://github.com/openmsr/CAD_to_OpenMC/releases/download/v0.2.2/CAD_to_OpenMC-0.2.2-py3-none-any.whl')
md5sums=('SKIP')

# Please refer to the 'USING VCS SOURCES' section of the PKGBUILD man page for
# a description of each element in the source array.

pkgver() {
	cd "$srcdir/${pkgname%-VCS}"

# The examples below are not absolute and need to be adapted to each repo. The
# primary goal is to generate version numbers that will increase according to
# pacman's version comparisons with later commits to the repo. The format
# VERSION='VER_NUM.rREV_NUM.HASH', or a relevant subset in case VER_NUM or HASH
# are not available, is recommended.

# Bazaar
	printf "r%s" "$(bzr revno)"

# Git, tags available
	printf "%s" "$(git describe --long | sed 's/\([^-]*-\)g/r\1/;s/-/./g')"

# Git, no tags available
	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"

# Mercurial
	printf "r%s.%s" "$(hg identify -n)" "$(hg identify -i)"

# Subversion
	printf "r%s" "$(svnversion | tr -d 'A-z')"
}

prepare() {
	cd "$srcdir/${pkgname%-VCS}"
	patch -p1 -i "$srcdir/${pkgname%-VCS}.patch"
}

build() {
	cd "$srcdir/${pkgname%-VCS}"
	./autogen.sh
	./configure --prefix=/usr
	make
}

check() {
	cd "$srcdir/${pkgname%-VCS}"
	make -k check
}

package() {
	cd "$srcdir/${pkgname%-VCS}"
	make DESTDIR="$pkgdir/" install
}
