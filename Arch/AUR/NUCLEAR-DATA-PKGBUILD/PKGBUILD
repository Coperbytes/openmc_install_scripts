# Maintainer: Luke Labrie-Cleary <luke.cleary@copenhagenatomics.com>
pkgname=nuclear_data
pkgver=0
pkgrel=1
pkgdesc="Evaluated nuclear data files for OpenMC"
pkgdir=/opt
arch=(x86_64)

license=()
makedepends=(
	git
	python
	cmake
)
provides=("${pkgname%}")
prepare() {
	# user select cross section & depletion data
	PS3='cross section data: '
	options=("endfb71" "endfb80" "jeff33" "fendl32" "chain_endfb71_pwr" "quit")
	select opt in "${options[@]}"
	do
	    case $opt in
	        "endfb71")
	            _cross_sections=$_endfb71 && _cpath='endfb71_hdf5' && break
	            ;;
	        "endfb80")
	            _cross_sections=$_endfb80 && _cpath='endfb80_hdf5' && break
	            ;;
	        "jeff33")
	            _cross_sections=$_jeff33 && _cpath='jeff33_hdf5' && break
	            ;;
	        "fendl32")
	            _cross_sections=$_fendl32 && _cpath='fendl-3.2-hdf5' && break
	            ;;
	        "quit")
	            break
	            ;;
	        *) echo "invalid option $REPLY";;
	    esac
	done
	PS3='delpletion data: '
	options=("chain_endfb71_fast" "chain_casl_pwr" "chain_casl_sfr" "quit")
	select opt in "${options[@]}"
	do
	    case $opt in
	        "chain_endfb71_fast")
	            _depletion=$_chain_endfb71_fast && break
	            ;;
	        "chain_casl_pwr")
	            _depletion=$_chain_casl_pwr && break
	            ;;
	        "chain_casl_sfr")
	            _depletion=$_chain_casl_sfr && break
	            ;;
	        "quit")
	            break
	            ;;
	        *) echo "invalid option $REPLY";;
	    esac
	done
}
build() {
	sudo pacman --noconfirm -Syu wget
	cd /opt
	mkdir "$pkgname"
	cd "$pkgname"
	wget $_cross_sections
	wget $_depletion
	echo "depletion data (.xml) saved at $PWD"
}
package() {
	cd /opt/$pkgname
	for entry in "$PWD"/*
	do
		if [[ $entry == *.xz ]]
		then
	  	tar -xvf $entry
		fi
	done
	echo "export OPENMC_CROSS_SECTIONS=$PWD/$_cpath/cross_sections.xml" >> $HOME/.bashrc
	source $HOME/.bashrc
}
